{"version":3,"file":"component---src-templates-blog-post-js-d46f40d58f1763a805ed.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {/* <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      /> */}\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a> */}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        © {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","_ref","location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","Link","to","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","metaDescription","defaultTitle","content","property","twitter","Head","_ref2","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}